:root {
  --bg-card: rgba(17, 24, 39, 0.65);
  --border: rgba(100, 116, 139, 0.18);
  --accent-cyan: #06b6d4;
  --accent-pink: #ec4899;
  --error-red: #ef4444;
  --success-green: #22c55e;
  --text-primary: #f0f9ff;
  --text-secondary: #d1d5db;
  --text-tertiary: #9ca3af;
  --transition-fast: 0.2s ease;
  --transition-normal: 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

* {
  box-sizing: border-box;
}

body.modal-open {
  overflow: hidden;
  padding-right: 15px;
}

.input-field {
  width: 100%;
  padding: 0.75rem 1rem;
  border-radius: 0.75rem;
  background-color: rgba(31, 41, 55, 0.55);
  color: #fff;
  border: 1px solid var(--border);
  transition: border var(--transition-fast),
              box-shadow var(--transition-fast),
              transform var(--transition-fast);
  font-family: inherit;
  font-size: 0.875rem;
}

.input-field:focus {
  outline: none;
  border-color: var(--accent-cyan);
  box-shadow: 0 0 0 3px rgba(6, 182, 212, 0.2);
  transform: translateY(-1px);
}

.input-field:focus-visible {
  outline: 2px solid var(--accent-cyan);
  outline-offset: 2px;
}

.input-field::placeholder {
  color: #6b7280;
}

.input-field:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  background-color: rgba(31, 41, 55, 0.3);
}

.input-field[aria-invalid="true"] {
  border-color: var(--error-red);
  background-color: rgba(239, 68, 68, 0.05);
}

.input-field[aria-invalid="true"]:focus {
  box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.2);
}

.input-field.valid {
  border-color: var(--success-green);
}

textarea.input-field {
  resize: vertical;
  min-height: 80px;
}

select.input-field {
  appearance: none;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%2306b6d4' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
  background-position: right 0.5rem center;
  background-repeat: no-repeat;
  background-size: 1.5em 1.5em;
  padding-right: 2.5rem;
}

select.input-field:disabled {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
}

input[type="file"].input-field {
  padding: 0.5rem 1rem;
}

#dropZone {
  transition: all var(--transition-normal);
}

#dropZone:hover,
#dropZone:focus {
  border-color: var(--accent-cyan);
  background-color: rgba(6, 182, 212, 0.05);
}

#dropZone:focus-visible {
  outline: 2px solid var(--accent-cyan);
  outline-offset: 2px;
}

#dropZone.drag-over {
  border-color: var(--accent-cyan);
  background-color: rgba(6, 182, 212, 0.1);
  transform: scale(1.02);
}

#fileList {
  animation: slideDown 0.3s ease;
}

@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

#fileListItems {
  list-style: none;
  padding: 0;
  margin: 0;
}

.file-item {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0.5rem 0.75rem;
  background: rgba(31, 41, 55, 0.4);
  border-radius: 0.5rem;
  border: 1px solid var(--border);
}

.file-item-info {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  flex: 1;
  min-width: 0;
}

.file-item-name {
  color: var(--text-secondary);
  font-size: 0.875rem;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.file-item-size {
  color: var(--text-tertiary);
  font-size: 0.75rem;
  white-space: nowrap;
}

.file-item-remove {
  background: none;
  border: none;
  color: var(--error-red);
  cursor: pointer;
  padding: 0.25rem 0.5rem;
  border-radius: 0.25rem;
  transition: background var(--transition-fast);
  font-size: 1.5rem;
  line-height: 1;
}

.file-item-remove:hover {
  background: rgba(239, 68, 68, 0.1);
}

.file-item-remove:focus-visible {
  outline: 2px solid var(--error-red);
  outline-offset: 2px;
}

#uploadProgress {
  animation: fadeIn 0.3s ease;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

.vector-store-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));
  gap: 1.5rem;
}

.vector-store-card {
  background: linear-gradient(135deg, rgba(17, 24, 39, 0.8), rgba(15, 23, 42, 0.6));
  border: 1px solid rgba(75, 85, 99, 0.3);
  border-radius: 1.5rem;
  padding: 1.5rem;
  backdrop-filter: blur(10px);
  transition: all var(--transition-normal);
  position: relative;
  overflow: hidden;
  min-height: 280px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  cursor: pointer;
  will-change: transform;
  contain: layout style paint;
  text-align: left;
}

.vector-store-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(90deg, transparent, var(--accent-cyan), transparent);
  opacity: 0;
  transition: opacity var(--transition-normal);
}

.vector-store-card:hover {
  transform: translateY(-8px) scale(1.02);
  border-color: rgba(6, 182, 212, 0.4);
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.4),
              0 0 30px rgba(6, 182, 212, 0.1);
}

.vector-store-card:hover::before {
  opacity: 1;
}

.vector-store-card:focus-visible {
  outline: 2px solid var(--accent-cyan);
  outline-offset: 4px;
}

.vector-store-card:active {
  transform: translateY(-4px) scale(1.01);
}

.card-header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: 1rem;
}

.store-name {
  font-size: 1.25rem;
  font-weight: 700;
  color: var(--text-primary);
  margin: 0;
  line-height: 1.3;
  flex: 1;
}

.provider-badge {
  background: linear-gradient(135deg, var(--accent-cyan), var(--accent-pink));
  color: white;
  padding: 0.25rem 0.75rem;
  border-radius: 1rem;
  font-size: 0.75rem;
  font-weight: 600;
  margin-left: 0.5rem;
  white-space: nowrap;
}

.card-content {
  flex: 1;
  margin-bottom: 1rem;
}

.model-info {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  color: var(--text-tertiary);
  font-size: 0.875rem;
  margin-bottom: 0.75rem;
}

.model-icon {
  color: var(--accent-cyan);
  font-size: 1rem;
}

.description {
  color: var(--text-secondary);
  font-size: 0.9rem;
  line-height: 1.4;
  margin-bottom: 1rem;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.card-stats {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1.5rem;
  padding: 1rem 0;
  margin: 1rem 0;
  border-top: 1px solid rgba(75, 85, 99, 0.3);
  border-bottom: 1px solid rgba(75, 85, 99, 0.3);
}

.stat {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.25rem;
}

.stat-value {
  display: block;
  font-size: 1.75rem;
  font-weight: 700;
  color: var(--accent-cyan);
  line-height: 1;
}

.stat-label {
  display: block;
  font-size: 0.75rem;
  color: var(--text-tertiary);
  text-transform: uppercase;
  letter-spacing: 0.05em;
  font-weight: 500;
}

.date-info {
  text-align: center;
  color: #6b7280;
  font-size: 0.75rem;
  margin-bottom: 1rem;
  padding-bottom: 0.5rem;
}

.card-actions {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.92);
  backdrop-filter: blur(10px);
  display: none;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  border-radius: 1.5rem;
  z-index: 10;
}

.vector-store-card.active .card-actions {
  display: flex;
  animation: cardActionsFadeIn 0.3s ease;
}

@keyframes cardActionsFadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

.action-btn {
  padding: 0.75rem 1.5rem;
  border-radius: 0.75rem;
  font-weight: 600;
  font-size: 0.875rem;
  transition: all var(--transition-normal);
  border: none;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  min-width: 140px;
  justify-content: center;
}

.action-btn:focus-visible {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}

.upload-btn {
  background: linear-gradient(135deg, rgba(34, 197, 94, 0.2), rgba(34, 197, 94, 0.1));
  color: #86efac;
  border: 1px solid rgba(34, 197, 94, 0.3);
}

.upload-btn:hover {
  background: linear-gradient(135deg, rgba(34, 197, 94, 0.3), rgba(34, 197, 94, 0.2));
  transform: translateY(-2px);
}

.delete-btn {
  background: linear-gradient(135deg, rgba(239, 68, 68, 0.2), rgba(239, 68, 68, 0.1));
  color: #fca5a5;
  border: 1px solid rgba(239, 68, 68, 0.3);
}

.delete-btn:hover {
  background: linear-gradient(135deg, rgba(239, 68, 68, 0.3), rgba(239, 68, 68, 0.2));
  transform: translateY(-2px);
}

.empty-state {
  background: linear-gradient(135deg, rgba(17, 24, 39, 0.6), rgba(15, 23, 42, 0.4));
  border: 2px dashed rgba(75, 85, 99, 0.4);
  border-radius: 1.5rem;
  padding: 3rem 2rem;
  transition: all var(--transition-normal);
}

.empty-state:hover {
  border-color: rgba(6, 182, 212, 0.6);
  background: linear-gradient(135deg, rgba(17, 24, 39, 0.7), rgba(15, 23, 42, 0.5));
  transform: translateY(-2px);
}

.empty-icon {
  font-size: 3rem;
  margin-bottom: 1rem;
  opacity: 0.7;
}

.empty-title {
  color: var(--text-secondary);
  font-size: 1.25rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
}

.empty-description {
  color: var(--text-tertiary);
  font-size: 0.875rem;
}

#createVectorModal {
  backdrop-filter: blur(6px);
}

#createVectorModal:not(.hidden) {
  animation: modalFadeIn var(--transition-normal);
}

@keyframes modalFadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

#createVectorModal > div {
  animation: modalSlideIn var(--transition-normal);
}

@keyframes modalSlideIn {
  from {
    transform: translateY(30px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

#createVectorModal .input-field {
  background-color: rgba(31, 41, 55, 0.65);
}

#createVectorModal h2::after {
  content: '';
  display: block;
  width: 50px;
  height: 2px;
  background: linear-gradient(90deg, var(--accent-cyan), var(--accent-pink));
  margin-top: 0.5rem;
  border-radius: 1px;
}

#createVectorModal ::-webkit-scrollbar {
  width: 6px;
}

#createVectorModal ::-webkit-scrollbar-track {
  background: rgba(31, 41, 55, 0.3);
  border-radius: 3px;
}

#createVectorModal ::-webkit-scrollbar-thumb {
  background: rgba(6, 182, 212, 0.5);
  border-radius: 3px;
}

#createVectorModal ::-webkit-scrollbar-thumb:hover {
  background: rgba(6, 182, 212, 0.7);
}

#particles {
  position: fixed;
  inset: 0;
  z-index: 0;
  pointer-events: none;
  overflow: hidden;
}

.particle {
  position: absolute;
  bottom: -24px;
  border-radius: 50%;
  opacity: 0.75;
  background: radial-gradient(circle, rgba(255, 255, 255, 0.9), transparent);
  animation: floatUp linear forwards;
  will-change: transform, opacity;
}

@keyframes floatUp {
  0% {
    transform: translateY(0) scale(1);
    opacity: 0.9;
  }
  100% {
    transform: translateY(-110vh) scale(0.9);
    opacity: 0;
  }
}

.vector-store-card.loading {
  position: relative;
  overflow: hidden;
  pointer-events: none;
}

.vector-store-card.loading::after {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
  animation: loadingShimmer 1.5s infinite;
}

@keyframes loadingShimmer {
  0% { left: -100%; }
  100% { left: 100%; }
}

.notification {
  transition: opacity 0.3s ease, transform 0.3s ease;
  opacity: 0;
  transform: translateX(100%);
}

.notification.show {
  opacity: 1;
  transform: translateX(0);
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }

  .vector-store-card:hover {
    transform: none;
  }

  .particle {
    display: none;
  }
}

@media (prefers-contrast: high) {
  .input-field,
  .vector-store-card {
    border-width: 2px;
  }

  .input-field:focus-visible,
  .vector-store-card:focus-visible {
    outline-width: 3px;
  }
}

@media (max-width: 768px) {
  .vector-store-grid {
    grid-template-columns: 1fr;
    gap: 1rem;
  }

  .vector-store-card {
    padding: 1.25rem;
    min-height: 260px;
  }

  .vector-store-card:hover {
    transform: translateY(-4px) scale(1.01);
  }

  .card-header {
    flex-direction: column;
    gap: 0.5rem;
  }

  .provider-badge {
    align-self: flex-start;
    margin-left: 0;
  }

  .action-btn {
    min-width: 120px;
    padding: 0.625rem 1.25rem;
  }

  .card-stats {
    gap: 1rem;
  }

  .stat-value {
    font-size: 1.5rem;
  }
}

@media (max-width: 480px) {
  .vector-store-card {
    padding: 1rem;
    min-height: 240px;
  }

  .store-name {
    font-size: 1.125rem;
  }

  .card-stats {
    grid-template-columns: 1fr;
    gap: 0.75rem;
    padding: 0.75rem 0;
  }

  .stat {
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
  }

  .stat-value {
    font-size: 1.25rem;
  }

  .stat-label {
    font-size: 0.7rem;
  }
}

.vector-store-card ~ #noStores {
  display: none !important;
}
